name: Backend Flake8

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/flake8.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

concurrency:
  group: flake8-${{ github.ref }}
  cancel-in-progress: true

jobs:
  flake8:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-docstrings flake8-bugbear

      - name: Run Flake8
        working-directory: backend
        run: |
          flake8 app \
            --count \
            --select=E9,F63,F7,F82 \
            --show-source \
            --statistics
          flake8 app \
            --count \
            --exit-zero \
            --max-complexity=10 \
            --max-line-length=127 \
            --statistics

  black:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Black
        run: pip install black

      - name: Check code formatting with Black
        working-directory: backend
        run: black --check app || (echo "::error::Code not formatted. Run:black app" && exit 1)

  isort:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install isort
        run: pip install isort

      - name: Check import sorting with isort
        working-directory: backend
        run: isort --check-only app || (echo "::error::Imports not sorted. Run:isort app" && exit 1)

  pylint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -r requirements.txt

      - name: Run Pylint
        working-directory: backend
        run: pylint app --exit-zero --max-line-length=127 || echo "Pylint check completed with warnings"
